Stochastic Optimization

We are trying to optimize all the things around everyday. For example, we would like to find the shortest way to go to work and we want to find the balance nutrition for our body but spend least money on food. There are countless examples.

In this post, I would like to introduce the stochastic optimization methods. My background is computational mathematics and I really enjoy this post.
I will follow the steps in the chapter 5 of book "Programming Collective Intelligence" where random searching, hill climbing, simulated annealing and genetic algorithms are shown. The random-restart hill climbling based on hill climbing is implemented by myself in order to compare with other methods.


Probelm

Imagin that someone and his/her family memebers or friends are planning to visit one place (New York in this following example) from different places (such as Boston, Dallas and so on in the following example). As it shows

insert 
people = ......
destination.....

All the people would like to arrive at and leave "LGA" at the same day, and they would like to take the same transportation travelling from "LGA" and back to "LGA". Certainly, there are many suitable airlines satisfying this requirement. However, how to find the optimized airlines such that all arrive at "LGA" at the closer time and do not wait long time for others, as well as optimized the price of the airtickers. Actually, there are many aspects to consider.

In the file "schedule.txt", the airlines' information are given and it looks like

insert....


For example, from "LGA" to "MIA", depart at 20:27, arrive at 23:42, price is 169 dollars.


Representing Solutions

In this example, there are 6 people. The list of number can be represented the solution for the above problem.

insert figure
[1,4,3,2....] people and time

where number means the index of the airpline in that day, for example, 0 is the first airline, 1 is the second airline,....


The Cost Function

The core of the optimization is to find a good cost function. The cost function will return a solution. The higer return value from the cost function, the solution is worse.
Generally, one can consider the variables, such as, in this example, airticket price, travelling time, waiting time, departure time, time to rent the car. All the variables need to be combined together and return a value in the cost function. In this example, all variables are considered as some number, for example, waiting 1 minute costs 1 dollar. The detailed description can be found in the function of schedulecost in the "optimization.py".

For example, for the case of solution [1,4,....], the cost function returns the value of ... and solution [3,4,5...], it returns the value of ....



Random Searching

As the indication by the name of this method, the solution is generated randomly. For example, the method can be exected by 1000 times, and the solution from the lowest value calculated by cost function is the final solution. I have tested 10, 100, 1000, 10000, and 100000 times

insert the result


As you can see, the result..... Therefore, this method is not a good choice for the given problem in the example.


Hill Climbing

Hill Climbing is a method which utilizes the random solution. Moreover, it tries to find the better solution around this random solution. This procudure will be repeated until the best solution is found. Here, I have executed the method 10 times, the cost function is 


insert the figure.


As it shows, the solution is different. It means that the solution 


Random-restart Hill Climbing


Simulated Annealing



Genetic Algorithms






